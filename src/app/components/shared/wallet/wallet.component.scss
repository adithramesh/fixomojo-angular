@use 'sass:color';
@use 'variables' as var;
@use '../../admin/admin-dashboard/admin-dashboard.component.scss';

.wallet-container {
  max-width: 1200px;
  margin: 0 auto;
  background-color: var.$white;
  padding: var.$spacing-lg;
  border-radius: var.$border-radius-md;
  box-shadow: var.$box-shadow-sm;

  h2 {
    font-family: var.$title-font;
    font-size: var.$font-size-xl;
    color: var.$purple;
    margin-bottom: var.$spacing-md;
  }

  .wallet-balance {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var.$spacing-lg;

    p {
      font-size: var.$font-size-lg;
      color: var.$text-color;

      .currency-amount {
        font-weight: var.$font-weight-bold;
        color: var.$purple;
      }
    }

    .add-money-button {
      background-color: var.$purple;
      color: var.$white;
      padding: var.$spacing-sm var.$spacing-md;
      border: none;
      border-radius: var.$border-radius-sm;
      cursor: pointer;
      transition: background-color 0.3s ease;

      &:hover {
        background-color: color.adjust(var.$purple, $lightness: -10%);
      }
    }
  }

  .wallet-recharge {
    margin-bottom: var.$spacing-lg;
    display: flex; /* Added flex to align input and buttons */
    gap: var.$spacing-sm; /* Added gap for consistent spacing */
    align-items: center;

    input {
      padding: var.$spacing-sm;
      font-size: var.$font-size-sm;
      border: 1px solid var.$border-color;
      border-radius: var.$border-radius-sm;
      width: 200px;

      &:focus {
        outline: none;
        border-color: var.$purple;
      }
    }

    button {
      background-color: var.$purple;
      color: var.$white;
      padding: var.$spacing-sm var.$spacing-md;
      border: none;
      border-radius: var.$border-radius-sm;
      cursor: pointer;
      transition: background-color 0.3s ease;

      &:hover {
        background-color: color.adjust(var.$purple, $lightness: -10%);
      }
    }
  }

  .transaction-history {
    h3 {
      font-family: var.$title-font;
      font-size: var.$font-size-lg;
      color: var.$text-color;
      margin-bottom: var.$spacing-md;
    }

    .error-message {
      color: var.$error-red;
      font-size: var.$font-size-sm;
      margin-top: var.$spacing-md;
    }
  }
}

.loading-message {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var.$spacing-sm;
  color: var.$gray-text;
  font-size: var.$font-size-md;
}

.spinner {
  border: 3px solid var.$border-color;
  border-top: 3px solid var.$purple;
  border-radius: 50%;
  width: 24px;
  height: 24px;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.status-credit {
  color: var.$success-green;
  font-weight: var.$font-weight-semibold;
}
.status-debit {
  color: var.$error-red;
  font-weight: var.$font-weight-semibold;
}

// Refactored Transaction Filters Section
.transaction-filters {
  display: flex;
  flex-wrap: wrap;
  gap: var.$spacing-sm;
  margin-bottom: var.$spacing-md;
  align-items: flex-start; /* Aligns items to the top to prevent tall elements from affecting others */

  .filter-group {
    display: flex;
    flex-direction: column;
    min-width: 140px;
    flex: 1; /* Allows groups to grow and shrink */
    
    label {
      font-size: var.$font-size-sm;
      color: var.$text-color;
      margin-bottom: 0.3rem;
    }

    input, select {
      padding: var.$spacing-sm;
      border: 1px solid var.$border-color;
      border-radius: var.$border-radius-sm;
      font-size: var.$font-size-sm;
      height: calc(1em + var.$spacing-sm * 2 + 2px); /* Ensures consistent height across different input types */
    }
  }

  .filter-button, .reset-button {
    // Shared button styles
    padding: var.$spacing-sm var.$spacing-md;
    border: none;
    border-radius: var.$border-radius-sm;
    cursor: pointer;
    font-weight: var.$font-weight-bold;
    transition: background-color 0.3s ease;
    align-self: flex-end; /* Aligns buttons to the bottom, next to the inputs */
  }

  .filter-button {
    background-color: var.$purple;
    color: var.$white;
    &:hover {
      background-color: color.adjust(var.$purple, $lightness: -10%);
    }
  }
  
  .reset-button {
    background-color: var.$gray-light;
    color: var.$text-color;
    &:hover {
      background-color: color.adjust(var.$gray-light, $lightness: -5%);
    }
  }
}